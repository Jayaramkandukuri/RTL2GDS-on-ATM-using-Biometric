
global ::Eps::option
catch {set ::Eps::option(onflyGeneratedTechPGV) ""}
catch {set ::Eps::option(epsPwrCrBinaryDb) "true"}
catch {set ::Eps::option(epsPwrResultsDir) ""}
catch {set ::Eps::option(epsRailMissingFiles) ""}
catch {set ::Eps::option(epsCommSpefFiles) "${::IMEX::libVar}/misc/ATM.spef"}
catch {set ::Eps::option(epsCommDefFiles) ""}
catch {set ::Eps::option(epsDoneExport) "1"}
catch {set ::Eps::option(epsPwrXTrans) "0.5"}
catch {set ::Eps::option(epsPwrWrCurFile) "true"}
catch {set ::Eps::option(epsCommNoInvoke) "false"}
catch {set ::Eps::option(epsPwrOffPgNets) ""}
catch {set ::Eps::option(epsCommLefFiles) "${::IMEX::libVar}/lef/gsclib090_translated_ref.lef ${::IMEX::libVar}/lef/gsclib090_translated.lef"}
catch {set ::Eps::option(epsCommPwrNets) "VDD"}
catch {set ::Eps::option(epsRailPrevView) ""}
catch {set ::Eps::option(isInitialized) "1"}
catch {set ::Eps::option(rdlDefInReadDef) ""}
catch {set ::Eps::option(onFlyGeneratedTechPGVFolder) ""}
catch {set ::Eps::option(,epsRailMethod) "static"}
catch {set ::Eps::option(epsCommGndNets) "VSS"}
catch {set ::Eps::option(epsPwrDftActInput) "0.2"}
catch {set ::Eps::option(epsCommSecDefFiles) ""}
catch {set ::Eps::option(epsCommTimeLib,MIN) ""}
catch {set ::Eps::option(epsPwrMethod) "static"}
catch {set ::Eps::option(epsPwrZTrans) "0.25"}
catch {set ::Eps::option(epsCommTimeLib,MAX) ""}
catch {set ::Eps::option(epsPwrLibraries) ""}
catch {set ::Eps::option(epsDefDumped) "0"}
catch {set ::Eps::option(epsPwrDynamicMethod) "vectorless"}
catch {set ::Eps::option(epsPwrAnalysisView) ""}
catch {set ::Eps::option(epsPwrDftActPeriod) "100"}
catch {set ::Eps::option(epsCommTimeLib,TYP) ""}
catch {set ::Eps::option(epsCommWriteCmdFile) "false"}
catch {set ::Eps::option(epsPwrHonorNegativeEnergy) "true"}
catch {set ::Eps::option(epsCommTopCell) "ATM"}
catch {set ::Eps::option(rdlPlaceXInReadDef) ""}
catch {set ::Eps::option(epsPwrPgNets) ""}
catch {set ::Eps::option(epsCommPwrLib) ""}
catch {set ::Eps::option(epsPwrDftActDuty) "0.5"}
catch {set ::Eps::option(epsPwrPgNetLibBindingVoltages) ""}
catch {set ::Eps::option(rdlOrienInReadDef) ""}
catch {set ::Eps::option(epsCommPwrNetVoltages) ""}
catch {set ::Eps::option(rdlPlaceYInReadDef) ""}
catch {set ::Eps::option(epsPwrPgNetVoltages) ""}
catch {set ::Eps::option(qrcTechFiles) ""}
catch {set ::Eps::option(onFlyTechPGVWithoutCells) "0"}
catch {set ::Eps::option(hierPGVInVstorm2) ""}
catch {set ::Eps::option(epsCommOARefLibs) ""}
catch {set ::Eps::option(isDBChanged) "1"}
